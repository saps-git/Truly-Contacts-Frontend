[{"/home/saptarshi/Projects/truly-contacts-frontend/src/index.js":"1","/home/saptarshi/Projects/truly-contacts-frontend/src/App.js":"2","/home/saptarshi/Projects/truly-contacts-frontend/src/reportWebVitals.js":"3","/home/saptarshi/Projects/truly-contacts-frontend/src/routes/index.js":"4","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Register/index.js":"5","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Login/index.js":"6","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Contacts/index.js":"7","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/CreateContact/index.js":"8","/home/saptarshi/Projects/truly-contacts-frontend/src/components/header/index.js":"9","/home/saptarshi/Projects/truly-contacts-frontend/src/context/Provider.js":"10","/home/saptarshi/Projects/truly-contacts-frontend/src/context/initialstates/authInitialState.js":"11","/home/saptarshi/Projects/truly-contacts-frontend/src/context/initialstates/contactsInitialState.js":"12","/home/saptarshi/Projects/truly-contacts-frontend/src/context/reducers/auth.js":"13","/home/saptarshi/Projects/truly-contacts-frontend/src/context/reducers/contacts.js":"14","/home/saptarshi/Projects/truly-contacts-frontend/src/layout/Register/index.js":"15","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Register/useForm.js":"16","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/auth/register.js":"17","/home/saptarshi/Projects/truly-contacts-frontend/src/constants/actionTypes/index.js":"18","/home/saptarshi/Projects/truly-contacts-frontend/src/layout/Login/index.js":"19","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Login/useForm.js":"20","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/auth/login.js":"21","/home/saptarshi/Projects/truly-contacts-frontend/src/helpers/axiosInstance.js":"22","/home/saptarshi/Projects/truly-contacts-frontend/src/utils/isAuthenticated.js":"23","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/contacts/getContacts.js":"24","/home/saptarshi/Projects/truly-contacts-frontend/src/constants/api.js":"25","/home/saptarshi/Projects/truly-contacts-frontend/src/layout/Contacts/List/index.js":"26","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/auth/logout.js":"27"},{"size":500,"mtime":1609341443218,"results":"28","hashOfConfig":"29"},{"size":1095,"mtime":1612021493674,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1609341443218,"results":"31","hashOfConfig":"29"},{"size":966,"mtime":1611674873399,"results":"32","hashOfConfig":"29"},{"size":276,"mtime":1612024227324,"results":"33","hashOfConfig":"29"},{"size":239,"mtime":1612023280060,"results":"34","hashOfConfig":"29"},{"size":749,"mtime":1612023061214,"results":"35","hashOfConfig":"29"},{"size":257,"mtime":1609773223257,"results":"36","hashOfConfig":"29"},{"size":1452,"mtime":1612022730416,"results":"37","hashOfConfig":"29"},{"size":700,"mtime":1612024202344,"results":"38","hashOfConfig":"29"},{"size":100,"mtime":1611491343534,"results":"39","hashOfConfig":"29"},{"size":184,"mtime":1611819111159,"results":"40","hashOfConfig":"29"},{"size":1102,"mtime":1611647322080,"results":"41","hashOfConfig":"29"},{"size":1235,"mtime":1612024728601,"results":"42","hashOfConfig":"29"},{"size":4088,"mtime":1611761229286,"results":"43","hashOfConfig":"29"},{"size":1974,"mtime":1612023429277,"results":"44","hashOfConfig":"29"},{"size":792,"mtime":1611679382325,"results":"45","hashOfConfig":"29"},{"size":502,"mtime":1612013361365,"results":"46","hashOfConfig":"29"},{"size":1999,"mtime":1611761201451,"results":"47","hashOfConfig":"29"},{"size":1436,"mtime":1612023185551,"results":"48","hashOfConfig":"29"},{"size":667,"mtime":1611679372117,"results":"49","hashOfConfig":"29"},{"size":1337,"mtime":1611678596344,"results":"50","hashOfConfig":"29"},{"size":100,"mtime":1611674619714,"results":"51","hashOfConfig":"29"},{"size":758,"mtime":1612023770608,"results":"52","hashOfConfig":"29"},{"size":63,"mtime":1611765605410,"results":"53","hashOfConfig":"29"},{"size":1656,"mtime":1612007403927,"results":"54","hashOfConfig":"29"},{"size":230,"mtime":1612023635166,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"e0otw4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},"/home/saptarshi/Projects/truly-contacts-frontend/src/index.js",[],["123","124"],"/home/saptarshi/Projects/truly-contacts-frontend/src/App.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/reportWebVitals.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/routes/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Register/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Login/index.js",["125"],"import React, { useContext } from 'react'\nimport LoginUI from '../../layout/Login'\nimport useForm from './useForm'\n\nconst LoginContainer = () => {\n    return (\n            <LoginUI form={useForm()}/>\n    )\n}\n\nexport default LoginContainer\n","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Contacts/index.js",["126"],"import React, { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport getContacts from '../../context/actions/contacts/getContacts'\nimport { GlobalContext } from '../../context/Provider'\nimport  ContactsListUI  from '../../layout/Contacts/List'\n\nfunction ContactsContainer() {\n    const {contactsState, contactsDispatch} = useContext(GlobalContext);\n    const { contacts: {data,}} = contactsState;\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if(data.length === 0){\n            getContacts(history)(contactsDispatch);\n        }\n    }, []);\n\n    console.log('contactState', contactsState)\n\n    return (\n        <ContactsListUI state={contactsState}/>\n    )\n}\n\nexport default ContactsContainer\n","/home/saptarshi/Projects/truly-contacts-frontend/src/containers/CreateContact/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/components/header/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/context/Provider.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/context/initialstates/authInitialState.js",["127"],"export default {\n    auth: {\n      loading: false,\n      data: null,\n      error: null,\n    },\n};\n  ","/home/saptarshi/Projects/truly-contacts-frontend/src/context/initialstates/contactsInitialState.js",["128"],"export default {\n    contacts: {\n        loading: false,\n        error: null,\n        data: [],\n        \n    },\n    addContact: {\n        loading: false,\n        error: null,\n    },\n};","/home/saptarshi/Projects/truly-contacts-frontend/src/context/reducers/auth.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/context/reducers/contacts.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/layout/Register/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Register/useForm.js",["129","130","131","132"],"//custom hook to handle the form\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {register} from '../../context/actions/auth/register';\nimport { GlobalContext } from '../../context/Provider';\n\nexport default () => {\n    const { \n        authDispatch,\n        authState: {\n            auth: {loading, data, error},\n        },\n    } = useContext(GlobalContext); //unpacking from context\n    \n    const [form, setForm] = useState({}); //for registration form\n    const [fieldErrors, setFieldErrors] = useState({}); //for error fields\n \n    const history = useHistory(); // The useHistory hook gives you access to the history instance that you may use to navigate.\n\n    const onChange = (e, { name, value}) => {\n        setForm({...form, [name]:value})\n    }; //on change set the form values, as \"name:value\" pair\n\n    useEffect(() => {\n        if(error){//in case there's an  error\n            for(const item in error){  //loop over the error array \n                setFieldErrors({...fieldErrors, [item]: error[item][0]}) //set errors in the array\n            }\n        }\n    },[error]); //invoke on any error\n\n    useEffect(() => {\n        if(data) { //if data is present, that is if we have successfully submitted the registration form\n            history.push(\"/auth/login\") //redirect to this page then\n        }\n    }, [data]); //invoked when we have data\n\n    const registerFormValid = //passing a var, which is true or false based on if any feild in form is null\n    !form.username?.length ||\n    !form.firstName?.length ||\n    !form.lastName?.length ||\n    !form.password?.length ||\n    !form.email?.length;\n\n    const onSubmit = () => {\n        setFieldErrors({}) //emptying all the errors before the form is submitted\n        register(form)(authDispatch) //registering the user, with the help of reducer\n    };\n\n    return {form, onChange, registerFormValid, loading, onSubmit, fieldErrors};\n}\n\n\n","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/auth/register.js",["133","134"],"import { REGISTER_ERROR, REGISTER_LOADING, REGISTER_SUCCESS } from '../../../constants/actionTypes';\nimport axiosInstance from '../../../helpers/axiosInstance';\n\nexport const register = ({email, password, username, lastName: last_name, firstName: first_name}) => (dispatch) => {\n    dispatch({\n        type: REGISTER_LOADING\n    }); \n    axiosInstance().post(\"/auth/register\", {\n        email,\n        password,\n        username,\n        first_name,\n        last_name            \n    }).\n    then((res) => {\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data,\n        });\n    }).\n    catch((err) => {\n        dispatch({\n            type: REGISTER_ERROR,\n            payload: err.response ? err.response.data : \"COULD NOT CONNECT\",\n        });\n    });\n};\n\n\n \n","/home/saptarshi/Projects/truly-contacts-frontend/src/constants/actionTypes/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/layout/Login/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/containers/Login/useForm.js",["135","136"],"//custom hook to handle the form\nimport { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {login} from '../../context/actions/auth/login';\nimport { GlobalContext } from '../../context/Provider';\n\nexport default () => {\n\n    const [form, setForm] = useState({}); //for registration form\n \n    const history = useHistory(); // The useHistory hook gives you access to the history instance that you may use to navigate.\n\n    const { \n        authDispatch,\n        authState: {\n            auth: {loading, data, error},\n        },\n    } = useContext(GlobalContext); //unpacking from context\n\n    const onChange = (e, { name, value}) => {\n        setForm({...form, [name]:value})\n    }; //on change set the form values, as \"name:value\" pair\n\n    const loginFormValid = //passing a var, which is true or false based on if any feild in form is null\n    !form.username?.length ||\n    !form.password?.length;\n\n    useEffect(() => {\n        if(data) { //if data is present, that is if we have successfully submitted the registration form\n            if(data.user){\n                history.push(\"/\") //redirect to this page then\n            }\n        }\n    }, [data]); //invoked when we have data\n\n    const onSubmit = () => {\n        login(form)(authDispatch) //registering the user, with the help of reducer\n    };\n\n    return {form, onChange, loginFormValid, loading, onSubmit, error };\n}\n\n\n","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/auth/login.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/helpers/axiosInstance.js",["137"],"import axios from 'axios'\n\nexport default (history = null) => {\n    const baseURL = process.env.REACT_APP_BACKEND_URL //backend URL from the .env file\n\n    let headers = {}\n\n    if(localStorage.token){ //if we already have a jwt stored, \n        headers.Authorization = `Bearer ${localStorage.token}` //then use make a string as 'Bearer:xxxx' for the header that is to be passed to the backend \n    }\n\n    const axiosInstance = axios.create({ //info that is to be used frequently\n        baseURL: baseURL,\n        headers,\n    })\n\n    axiosInstance.interceptors.response.use(\n        (response) => \n            new Promise((resolve, reject) => {\n                resolve(response);\n            }),\n        (error) => {\n            if(!error.response) {\n                return new Promise((resolve, reject) => {\n                    reject(error);\n                });\n            }\n\n            if(error.response.status===403){\n                localStorage.removeItem(\"token\");\n\n                if(history){\n                    history.push(\"/auth/login\");\n                }else{\n                    window.location = \"/auth/login\";\n                }\n            }else{\n                return new Promise((resolve, reject) => {\n                    reject(error);\n                })\n            }\n        }\n    )\n\n    return axiosInstance\n};",["138","139"],"/home/saptarshi/Projects/truly-contacts-frontend/src/utils/isAuthenticated.js",["140"],"export default () => !!localStorage.token; //returns a boolen value, saying if there's token or not\n","/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/contacts/getContacts.js",["141"],"import { CONTACTS_LOADING, CONTACTS_LOAD_ERROR, CONTACTS_LOAD_SUCCESS } from \"../../../constants/actionTypes\";\nimport axiosInstance from \"../../../helpers/axiosInstance\";\nimport { CONNECTION_ERROR } from \"../../../constants/api\";\n\nexport default (history) => (dispatch) => {\n    dispatch({\n        type: CONTACTS_LOADING,\n    })\n    axiosInstance(history)\n    .get(\"/contacts/\") //fetching details from contacts, \n    .then((res) => {\n        dispatch({ //and then calling dispath accordingly\n            type: CONTACTS_LOAD_SUCCESS,\n            payload: res.data,\n        });\n    })\n    .catch((err) => {\n        dispatch({\n            type: CONTACTS_LOAD_ERROR,\n            payload: err.response ? err.response.data : CONNECTION_ERROR \n        })\n    });\n}","/home/saptarshi/Projects/truly-contacts-frontend/src/constants/api.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/layout/Contacts/List/index.js",[],"/home/saptarshi/Projects/truly-contacts-frontend/src/context/actions/auth/logout.js",["142"],"import { LOGOUT_USER } from \"../../../constants/actionTypes\"\n\nexport default (history) => (dispatch) => {\n    localStorage.removeItem(\"token\");\n    dispatch({\n        type: LOGOUT_USER,\n    });\n    history.push(\"/auth/login\");\n};\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":17,"column":8,"nodeType":"153","endLine":17,"endColumn":10,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":1,"nodeType":"157","endLine":7,"endColumn":3},{"ruleId":"155","severity":1,"message":"156","line":1,"column":1,"nodeType":"157","endLine":12,"endColumn":3},{"ruleId":"147","severity":1,"message":"158","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"159","line":7,"column":1,"nodeType":"157","endLine":51,"endColumn":2},{"ruleId":"151","severity":1,"message":"160","line":30,"column":7,"nodeType":"153","endLine":30,"endColumn":14,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"162","line":36,"column":8,"nodeType":"153","endLine":36,"endColumn":14,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":14,"column":7,"nodeType":"166","messageId":"167","endLine":14,"endColumn":8,"fix":"168"},{"ruleId":"164","severity":1,"message":"165","line":20,"column":7,"nodeType":"166","messageId":"167","endLine":20,"endColumn":8,"fix":"169"},{"ruleId":"155","severity":1,"message":"159","line":7,"column":1,"nodeType":"157","endLine":41,"endColumn":2},{"ruleId":"151","severity":1,"message":"162","line":34,"column":8,"nodeType":"153","endLine":34,"endColumn":14,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"159","line":3,"column":1,"nodeType":"157","endLine":46,"endColumn":3},{"ruleId":"143","replacedBy":"171"},{"ruleId":"145","replacedBy":"172"},{"ruleId":"155","severity":1,"message":"159","line":1,"column":1,"nodeType":"157","endLine":1,"endColumn":43},{"ruleId":"155","severity":1,"message":"159","line":5,"column":1,"nodeType":"157","endLine":23,"endColumn":2},{"ruleId":"155","severity":1,"message":"159","line":3,"column":1,"nodeType":"157","endLine":9,"endColumn":3},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contactsDispatch', 'data.length', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["175"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has a missing dependency: 'fieldErrors'. Either include it or remove the dependency array. You can also do a functional update 'setFieldErrors(f => ...)' if you only need 'fieldErrors' in the 'setFieldErrors' call.",["176"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["177"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"178","text":"179"},{"range":"180","text":"179"},["181"],["173"],["174"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},[486,492],"\n    .",[612,618],{"desc":"186","fix":"188"},"Update the dependencies array to be: [contactsDispatch, data.length, history]",{"range":"189","text":"190"},"Update the dependencies array to be: [error, fieldErrors]",{"range":"191","text":"192"},"Update the dependencies array to be: [data, history]",{"range":"193","text":"194"},{"range":"195","text":"194"},[592,594],"[contactsDispatch, data.length, history]",[1146,1153],"[error, fieldErrors]",[1392,1398],"[data, history]",[1202,1208]]